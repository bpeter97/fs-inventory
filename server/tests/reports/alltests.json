{
  "stats": {
    "suites": 26,
    "tests": 45,
    "passes": 45,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-28T16:41:17.656Z",
    "end": "2022-10-28T16:41:53.659Z",
    "duration": 36003,
    "testsRegistered": 45,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ca60063b-e2d9-4d4a-949f-ccc2c6cca545",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff9c2b0c-f808-4c1e-97c0-0c9b2a5a558d",
          "title": "ITEMS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\items.test.js",
          "file": "\\tests\\items.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateUsers in \"ITEMS\"",
              "fullTitle": "ITEMS \"before each\" hook: populateUsers in \"ITEMS\"",
              "timedOut": false,
              "duration": 440,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "86461ac3-39be-439c-9eb4-e41936b954ba",
              "parentUUID": "ff9c2b0c-f808-4c1e-97c0-0c9b2a5a558d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populatePrograms in \"ITEMS\"",
              "fullTitle": "ITEMS \"before each\" hook: populatePrograms in \"ITEMS\"",
              "timedOut": false,
              "duration": 183,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Program.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar programOne = new Program(programs[0]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programTwo = new Program(programs[1]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programThree = new Program(programs[2]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\treturn Promise.all([programOne, programTwo, programThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "1ee83d80-7e8c-4e81-b163-f0eb88fa97f5",
              "parentUUID": "ff9c2b0c-f808-4c1e-97c0-0c9b2a5a558d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateWarehouses in \"ITEMS\"",
              "fullTitle": "ITEMS \"before each\" hook: populateWarehouses in \"ITEMS\"",
              "timedOut": false,
              "duration": 177,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Warehouse.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar warehouseOne = new Warehouse(warehouses[0])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseTwo = new Warehouse(warehouses[1])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseThree = new Warehouse(warehouses[2])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\treturn Promise.all([warehouseOne, warehouseTwo, warehouseThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "3f66d7be-6072-4d62-b2d3-a2560345dbea",
              "parentUUID": "ff9c2b0c-f808-4c1e-97c0-0c9b2a5a558d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateItems in \"ITEMS\"",
              "fullTitle": "ITEMS \"before each\" hook: populateItems in \"ITEMS\"",
              "timedOut": false,
              "duration": 180,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Item.deleteMany({})\n\t.then(() => {\n\t\t// create and save items\n\t\tvar itemOne = new Item(items[0]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar itemTwo = new Item(items[1]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar itemThree = new Item(items[2]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\treturn Promise.all([itemOne, itemTwo, itemThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "d49bbc69-e008-4b6d-93bb-a6ed145dc282",
              "parentUUID": "ff9c2b0c-f808-4c1e-97c0-0c9b2a5a558d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3fa6629e-7c34-4326-a367-a48b2167374f",
              "title": "GET /items",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\items.test.js",
              "file": "\\tests\\items.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of items",
                  "fullTitle": "ITEMS GET /items should return an array of items",
                  "timedOut": false,
                  "duration": 264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/items\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(items.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "4b8bde25-2c9f-4252-a4d3-ec159e3f34cc",
                  "parentUUID": "3fa6629e-7c34-4326-a367-a48b2167374f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of items if not authorized",
                  "fullTitle": "ITEMS GET /items should not return an array of items if not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/items\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "504849be-3cf5-4c7f-88fc-6631bca8334d",
                  "parentUUID": "3fa6629e-7c34-4326-a367-a48b2167374f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b8bde25-2c9f-4252-a4d3-ec159e3f34cc",
                "504849be-3cf5-4c7f-88fc-6631bca8334d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 267,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "a8b88e40-d52d-49e0-b409-4b0b20d7119d",
              "title": "GET /items/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\items.test.js",
              "file": "\\tests\\items.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an item",
                  "fullTitle": "ITEMS GET /items/:id should return an item",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/items/${items[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.item_name).to.equal(items[0].item_name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "ccc0baf6-f239-41e4-bde6-49dae941ab87",
                  "parentUUID": "a8b88e40-d52d-49e0-b409-4b0b20d7119d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an item with incorrect ID",
                  "fullTitle": "ITEMS GET /items/:id should not return an item with incorrect ID",
                  "timedOut": false,
                  "duration": 96,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/items/${items[0]._id}ssssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.item).to.equal(\"There was no item found\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "99ddeb9a-e476-42d8-8e39-beb4b5c8205f",
                  "parentUUID": "a8b88e40-d52d-49e0-b409-4b0b20d7119d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccc0baf6-f239-41e4-bde6-49dae941ab87",
                "99ddeb9a-e476-42d8-8e39-beb4b5c8205f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 258,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "2835ffba-81f7-4c09-a6ce-86ae8ccbf6c8",
              "title": "POST /items",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\items.test.js",
              "file": "\\tests\\items.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new item",
                  "fullTitle": "ITEMS POST /items should create a new item",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/items\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newItem)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.item_name).to.equal(newItem.item_name);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "7756c0d5-593b-451c-9739-f2264b8210f9",
                  "parentUUID": "2835ffba-81f7-4c09-a6ce-86ae8ccbf6c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new item",
                  "fullTitle": "ITEMS POST /items should not create a new item",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newItem.item_name = \"\";\nrequest(app)\n\t.post(\"/api/items\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newItem)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.item_name).to.equal(\n\t\t\t\"Item name is required\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "d2aad144-8a36-4296-a4eb-d6046bbf14fe",
                  "parentUUID": "2835ffba-81f7-4c09-a6ce-86ae8ccbf6c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7756c0d5-593b-451c-9739-f2264b8210f9",
                "d2aad144-8a36-4296-a4eb-d6046bbf14fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 256,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "b38a8215-4d38-40f8-896e-ded34ec80d67",
              "title": "DELETE /items/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\items.test.js",
              "file": "\\tests\\items.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a item",
                  "fullTitle": "ITEMS DELETE /items/:id should delete a item",
                  "timedOut": false,
                  "duration": 178,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/items/${items[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.item_name).to.equal(items[2].item_name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "431f7273-224c-4a37-9877-69551833e4ce",
                  "parentUUID": "b38a8215-4d38-40f8-896e-ded34ec80d67",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a item",
                  "fullTitle": "ITEMS DELETE /items/:id should not delete a item",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/items/${items[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.item).to.equal(\"There was no item found\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "3133e2f9-d1fd-4b6d-8d18-1cbb56a3c768",
                  "parentUUID": "b38a8215-4d38-40f8-896e-ded34ec80d67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "431f7273-224c-4a37-9877-69551833e4ce",
                "3133e2f9-d1fd-4b6d-8d18-1cbb56a3c768"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 260,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d2e6817b-7566-42da-b633-179de2d21cb2",
              "title": "PATCH /items/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\items.test.js",
              "file": "\\tests\\items.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a item",
                  "fullTitle": "ITEMS PATCH /items/:id should update a item",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "items[2].item_name = \"Bag of Screws\";\nrequest(app)\n\t.patch(`/api/items/${items[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(items[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.item_name).to.equal(\"Bag of Screws\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "3ad85f57-7ddb-4b39-a0bb-ead881879ed7",
                  "parentUUID": "d2e6817b-7566-42da-b633-179de2d21cb2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a item",
                  "fullTitle": "ITEMS PATCH /items/:id should not update a item",
                  "timedOut": false,
                  "duration": 91,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "items[1].item_name = \"Bag of Screws\";\nrequest(app)\n\t.patch(`/api/items/${items[1]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(items[1])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.item).to.equal(\"There was no item found\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "faec83d6-b4ef-40c5-9f9e-fce504842fbb",
                  "parentUUID": "d2e6817b-7566-42da-b633-179de2d21cb2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ad85f57-7ddb-4b39-a0bb-ead881879ed7",
                "faec83d6-b4ef-40c5-9f9e-fce504842fbb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 258,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "7f042642-6ac9-405a-b79f-7623aa36b1f0",
          "title": "PROGRAMS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
          "file": "\\tests\\programs.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 176,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Program.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar programOne = new Program(programs[0]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programTwo = new Program(programs[1]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programThree = new Program(programs[2]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\treturn Promise.all([programOne, programTwo, programThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "f8eba674-20cf-4642-a62b-5343b9bcc305",
              "parentUUID": "7f042642-6ac9-405a-b79f-7623aa36b1f0",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populateUsers in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 427,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "a88a0ae8-1390-471a-8aed-c7c5f2b8b371",
              "parentUUID": "7f042642-6ac9-405a-b79f-7623aa36b1f0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1ba0a216-7443-4a8b-8dfc-f35a13103cac",
              "title": "GET /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of programs",
                  "fullTitle": "PROGRAMS GET /programs should return an array of programs",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(programs.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "07f7fb68-e226-477f-b68c-27ee1e75c528",
                  "parentUUID": "1ba0a216-7443-4a8b-8dfc-f35a13103cac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of programs if not logged in",
                  "fullTitle": "PROGRAMS GET /programs should not return an array of programs if not logged in",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e212c96c-b59a-4700-b8d5-9944845da3ea",
                  "parentUUID": "1ba0a216-7443-4a8b-8dfc-f35a13103cac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07f7fb68-e226-477f-b68c-27ee1e75c528",
                "e212c96c-b59a-4700-b8d5-9944845da3ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 161,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "1e4f9b65-f620-44c7-ad61-f26760b5a329",
              "title": "GET /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific program",
                  "fullTitle": "PROGRAMS GET /programs/:id should return a specific program",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 1\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "5b562af8-4ed9-45f0-a0a0-f4fc9acb3c4a",
                  "parentUUID": "1e4f9b65-f620-44c7-ad61-f26760b5a329",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a program",
                  "fullTitle": "PROGRAMS GET /programs/:id should not return a program",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "94801cfa-26e3-45b0-a2af-ea85ec30fe79",
                  "parentUUID": "1e4f9b65-f620-44c7-ad61-f26760b5a329",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5b562af8-4ed9-45f0-a0a0-f4fc9acb3c4a",
                "94801cfa-26e3-45b0-a2af-ea85ec30fe79"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 244,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c3b18004-0e0f-44d1-89e0-338759db37ba",
              "title": "POST /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new program",
                  "fullTitle": "PROGRAMS POST /programs should create a new program",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newProgram.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "86518c58-196f-4e22-a8d4-42d09fdbc66d",
                  "parentUUID": "c3b18004-0e0f-44d1-89e0-338759db37ba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new program",
                  "fullTitle": "PROGRAMS POST /programs should not create a new program",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newProgram.name = \"\";\nrequest(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "75c10dcf-2983-4ec7-8c8c-0028565ca3f6",
                  "parentUUID": "c3b18004-0e0f-44d1-89e0-338759db37ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86518c58-196f-4e22-a8d4-42d09fdbc66d",
                "75c10dcf-2983-4ec7-8c8c-0028565ca3f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 243,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "794d3164-f8da-416e-be8b-44adabe70cfd",
              "title": "PATCH /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should update a program",
                  "timedOut": false,
                  "duration": 170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"Program 15\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 15\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "ec95216d-2151-4f09-905c-fa3407adc8f6",
                  "parentUUID": "794d3164-f8da-416e-be8b-44adabe70cfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should not update a program",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "1ba69d03-443e-438d-8602-381020a99f91",
                  "parentUUID": "794d3164-f8da-416e-be8b-44adabe70cfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec95216d-2151-4f09-905c-fa3407adc8f6",
                "1ba69d03-443e-438d-8602-381020a99f91"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 255,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "cfe8c33f-696b-4d4f-b411-38dcda4d4649",
              "title": "DELETE /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should delete a program",
                  "timedOut": false,
                  "duration": 164,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(programs[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "26667fe9-0b41-4684-8353-d183eb89cbca",
                  "parentUUID": "cfe8c33f-696b-4d4f-b411-38dcda4d4649",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should not delete a program",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "cc047d85-cad0-410f-89dc-781f23f0c66a",
                  "parentUUID": "cfe8c33f-696b-4d4f-b411-38dcda4d4649",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26667fe9-0b41-4684-8353-d183eb89cbca",
                "cc047d85-cad0-410f-89dc-781f23f0c66a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 247,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "acf4e9c1-9a6c-481a-b857-9b79ebba3b6c",
          "title": "USERS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
          "file": "\\tests\\users.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateUsers in \"USERS\"",
              "fullTitle": "USERS \"before each\" hook: populateUsers in \"USERS\"",
              "timedOut": false,
              "duration": 417,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "83fdba20-1a37-481b-8b44-5d374cb9de4d",
              "parentUUID": "acf4e9c1-9a6c-481a-b857-9b79ebba3b6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "36e80a74-a3f7-462e-9eda-c6b8d9ef8be5",
              "title": "GET /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of users",
                  "fullTitle": "USERS GET /users should return an array of users",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(users.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "be42dce0-af62-459d-a64d-152bdac3bca7",
                  "parentUUID": "36e80a74-a3f7-462e-9eda-c6b8d9ef8be5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be42dce0-af62-459d-a64d-152bdac3bca7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 161,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "28c62694-8a06-4085-b770-9eacedcf2a7f",
              "title": "POST /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new user",
                  "fullTitle": "USERS POST /users should create a new user",
                  "timedOut": false,
                  "duration": 494,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(newUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tnewUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tnewUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "17e9d5bf-c9e5-4e0b-949c-63e17ff2b5a9",
                  "parentUUID": "28c62694-8a06-4085-b770-9eacedcf2a7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new user with validation errors",
                  "fullTitle": "USERS POST /users should not create a new user with validation errors",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newUser.email = \"amessedupemail\";\nnewUser.first_name = \"l\";\nnewUser.last_name = \"l\";\nnewUser.username = \"l\";\nnewUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "3d0cbc00-d594-4df6-956b-e116b14cb6ce",
                  "parentUUID": "28c62694-8a06-4085-b770-9eacedcf2a7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17e9d5bf-c9e5-4e0b-949c-63e17ff2b5a9",
                "3d0cbc00-d594-4df6-956b-e116b14cb6ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 653,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "8dca6ffa-f3f3-48a4-8cb8-3b312ade37b2",
              "title": "GET /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a specific user with the provided ID",
                  "fullTitle": "USERS GET /users/:id should get a specific user with the provided ID",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e2dd8865-6d88-4665-a6ab-e02b8c68d411",
                  "parentUUID": "8dca6ffa-f3f3-48a4-8cb8-3b312ade37b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a user with invalid ID",
                  "fullTitle": "USERS GET /users/:id should not return a user with invalid ID",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "0a4eb92a-2e54-434d-8cd8-900e555e3767",
                  "parentUUID": "8dca6ffa-f3f3-48a4-8cb8-3b312ade37b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2dd8865-6d88-4665-a6ab-e02b8c68d411",
                "0a4eb92a-2e54-434d-8cd8-900e555e3767"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 250,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "305f9d72-ca89-4446-9509-749720e2486e",
              "title": "PATCH /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update and return a single user",
                  "fullTitle": "USERS PATCH /users/:id should update and return a single user",
                  "timedOut": false,
                  "duration": 242,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "users[1].approved = true;\nrequest(app)\n\t.patch(`/api/users/${users[1]._id.toHexString()}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(users[1].username);\n\t\texpect(res.body.approved).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "28b23d40-1493-4d5f-96c2-a5aabefa630d",
                  "parentUUID": "305f9d72-ca89-4446-9509-749720e2486e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with invalid ID",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.patch(`/api/users/${users[1]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Invalid ID\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "6db78bdd-a2e3-4a10-acc9-9b550e7670ca",
                  "parentUUID": "305f9d72-ca89-4446-9509-749720e2486e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with validation errors",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with validation errors",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userData = {\n\tfirstName: \"\",\n\tlastName: \"Peter\",\n\tsuffix: \"Sr\",\n\tusername: \"blpsr\",\n\tpassword: \"thePassword\",\n\temail: \"gbr@test.com\",\n\ttype: \"Brian\",\n};\nrequest(app)\n\t.patch(`/api/users/${users[1]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(userData)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name is required\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\texpect(user.first_name).to.equal(\"Brian\");\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "d53a3d43-88ef-426b-a9e8-d541d44e85e1",
                  "parentUUID": "305f9d72-ca89-4446-9509-749720e2486e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28b23d40-1493-4d5f-96c2-a5aabefa630d",
                "6db78bdd-a2e3-4a10-acc9-9b550e7670ca",
                "d53a3d43-88ef-426b-a9e8-d541d44e85e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 483,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c6148cd7-e834-43b1-b396-c8ace3668076",
              "title": "DELETE /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete and return a single user",
                  "fullTitle": "USERS DELETE /users/:id should delete and return a single user",
                  "timedOut": false,
                  "duration": 248,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[0]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "3e455109-b8f0-43a8-b1a6-31d60d5836f1",
                  "parentUUID": "c6148cd7-e834-43b1-b396-c8ace3668076",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete and return a user with invalid ID",
                  "fullTitle": "USERS DELETE /users/:id should not delete and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[1]._id}sss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[1].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.username).to.equal(users[1].username);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "ba23cc5a-929b-4665-8fc6-e1526fab1813",
                  "parentUUID": "c6148cd7-e834-43b1-b396-c8ace3668076",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e455109-b8f0-43a8-b1a6-31d60d5836f1",
                "ba23cc5a-929b-4665-8fc6-e1526fab1813"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 408,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "476efb62-f4c8-4abf-9436-1867c6bdc333",
              "title": "POST /login",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should log the user into the website",
                  "fullTitle": "USERS POST /login should log the user into the website",
                  "timedOut": false,
                  "duration": 143,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.success).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "1a087208-7e5a-418b-9aa7-e35a523712fd",
                  "parentUUID": "476efb62-f4c8-4abf-9436-1867c6bdc333",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in with an incorrect password",
                  "fullTitle": "USERS POST /login should not log the user in with an incorrect password",
                  "timedOut": false,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginWrongUser)\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Wrong username/password combination\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "c4626723-18e8-4835-a663-f922e05ba5cb",
                  "parentUUID": "476efb62-f4c8-4abf-9436-1867c6bdc333",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in when not approved",
                  "fullTitle": "USERS POST /login should not log the user in when not approved",
                  "timedOut": false,
                  "duration": 141,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(users[3])\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Your account is not approved yet\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "3e7e3def-0c8a-4125-9662-ee24512c79c7",
                  "parentUUID": "476efb62-f4c8-4abf-9436-1867c6bdc333",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a087208-7e5a-418b-9aa7-e35a523712fd",
                "c4626723-18e8-4835-a663-f922e05ba5cb",
                "3e7e3def-0c8a-4125-9662-ee24512c79c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 426,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "14606849-5918-449d-9d45-60251ab33f67",
              "title": "POST /register",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register a new user",
                  "fullTitle": "USERS POST /register should register a new user",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/register\")\n\t.send(registerUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(registerUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: registerUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tregisterUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tregisterUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "2d52d67c-0cc3-4c13-90c3-750049437005",
                  "parentUUID": "14606849-5918-449d-9d45-60251ab33f67",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register a new user with validation errors",
                  "fullTitle": "USERS POST /register should not register a new user with validation errors",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "registerUser.email = \"amessedupemail\";\nregisterUser.first_name = \"l\";\nregisterUser.last_name = \"l\";\nregisterUser.username = \"l\";\nregisterUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/register\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(registerUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "6ec9aca5-2823-4053-8725-110305207bb1",
                  "parentUUID": "14606849-5918-449d-9d45-60251ab33f67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d52d67c-0cc3-4c13-90c3-750049437005",
                "6ec9aca5-2823-4053-8725-110305207bb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 383,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c4318131-448c-47d9-86f6-fe942c88a0ab",
          "title": "WAREHOUSES",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
          "file": "\\tests\\warehouses.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Warehouse.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar warehouseOne = new Warehouse(warehouses[0])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseTwo = new Warehouse(warehouses[1])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseThree = new Warehouse(warehouses[2])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\treturn Promise.all([warehouseOne, warehouseTwo, warehouseThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "917e7f7e-3cf6-4822-8607-178e9894d035",
              "parentUUID": "c4318131-448c-47d9-86f6-fe942c88a0ab",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 418,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "d7f1c2d0-5943-4818-bcd1-12e4416430df",
              "parentUUID": "c4318131-448c-47d9-86f6-fe942c88a0ab",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "83ef1e72-3f65-4881-972f-09622f381393",
              "title": "GET /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of warehouses",
                  "fullTitle": "WAREHOUSES GET /warehouses should return an array of warehouses",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(warehouses.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "4956eb59-8f2f-4051-acaf-28c0ca2d417f",
                  "parentUUID": "83ef1e72-3f65-4881-972f-09622f381393",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of warehouses if not logged in",
                  "fullTitle": "WAREHOUSES GET /warehouses should not return an array of warehouses if not logged in",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "00304e46-9249-4542-a9dd-097b13a146aa",
                  "parentUUID": "83ef1e72-3f65-4881-972f-09622f381393",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4956eb59-8f2f-4051-acaf-28c0ca2d417f",
                "00304e46-9249-4542-a9dd-097b13a146aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "9d6b1f66-c449-4fc3-8c5c-ea07adf40715",
              "title": "GET /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should return a specific warehouse",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 001\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "f13212cd-1490-4f88-894c-c6903c5451c1",
                  "parentUUID": "9d6b1f66-c449-4fc3-8c5c-ea07adf40715",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should not return a warehouse",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "aa095445-bf45-43d3-9299-882c7f793ba9",
                  "parentUUID": "9d6b1f66-c449-4fc3-8c5c-ea07adf40715",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f13212cd-1490-4f88-894c-c6903c5451c1",
                "aa095445-bf45-43d3-9299-882c7f793ba9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 239,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "acf3a215-f2f4-451b-ad10-c7a939fdbf7a",
              "title": "POST /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should create a new warehouse",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newWarehouse.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "69bfbf9f-5ba0-4c83-9e17-2f86c882e137",
                  "parentUUID": "acf3a215-f2f4-451b-ad10-c7a939fdbf7a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should not create a new warehouse",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newWarehouse.name = \"\";\nrequest(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "37bb3111-da99-4333-848e-e2aa48a22526",
                  "parentUUID": "acf3a215-f2f4-451b-ad10-c7a939fdbf7a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69bfbf9f-5ba0-4c83-9e17-2f86c882e137",
                "37bb3111-da99-4333-848e-e2aa48a22526"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 244,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "f3496acd-d9a6-4145-ad85-fee976c9ba3b",
              "title": "PATCH /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should update a warehouse",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 010\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 010\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "29df2dc1-0b8f-4fbd-8911-25f80f311dcb",
                  "parentUUID": "f3496acd-d9a6-4145-ad85-fee976c9ba3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should not update a warehouse",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "825973c2-c43d-4066-9e7e-37ee2266cc68",
                  "parentUUID": "f3496acd-d9a6-4145-ad85-fee976c9ba3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29df2dc1-0b8f-4fbd-8911-25f80f311dcb",
                "825973c2-c43d-4066-9e7e-37ee2266cc68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 243,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "9fafe0a8-6d91-46dc-adaf-d08976b78d45",
              "title": "DELETE /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should delete a warehouse",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(warehouses[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "3be01148-5e2a-45f6-8bf2-6da4e14ebffe",
                  "parentUUID": "9fafe0a8-6d91-46dc-adaf-d08976b78d45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should not delete a warehouse",
                  "timedOut": false,
                  "duration": 86,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "0c826327-c760-4c34-bb79-41a4373a240a",
                  "parentUUID": "9fafe0a8-6d91-46dc-adaf-d08976b78d45",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3be01148-5e2a-45f6-8bf2-6da4e14ebffe",
                "0c826327-c760-4c34-bb79-41a4373a240a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 253,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "alltests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "tests/reports",
        "reportFilename": "alltests"
      },
      "version": "6.2.0"
    }
  }
}