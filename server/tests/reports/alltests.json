{
  "stats": {
    "suites": 20,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-06T16:34:53.479Z",
    "end": "2022-09-06T16:35:18.971Z",
    "duration": 25492,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1beb30d7-ca50-4721-b22b-51082569c458",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fe03dd3a-cb82-4b38-8b9a-9d4abeb50093",
          "title": "PROGRAMS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
          "file": "\\tests\\programs.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 172,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Program.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar programOne = new Program(programs[0]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programTwo = new Program(programs[1]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programThree = new Program(programs[2]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\treturn Promise.all([programOne, programTwo, programThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "beac01f8-55c2-4783-9372-600a73554cb9",
              "parentUUID": "fe03dd3a-cb82-4b38-8b9a-9d4abeb50093",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populateUsers in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 428,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "2d814e33-578d-44e0-a8ec-25d0b8246449",
              "parentUUID": "fe03dd3a-cb82-4b38-8b9a-9d4abeb50093",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e64a9a4a-083f-4ad6-92d0-76cc4850b608",
              "title": "GET /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of programs",
                  "fullTitle": "PROGRAMS GET /programs should return an array of programs",
                  "timedOut": false,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(programs.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e860df6d-4238-4cbe-b58c-42719f30c18e",
                  "parentUUID": "e64a9a4a-083f-4ad6-92d0-76cc4850b608",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of programs if not logged in",
                  "fullTitle": "PROGRAMS GET /programs should not return an array of programs if not logged in",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "1dfb65d0-4fa1-4a87-a93d-8a9b346a97f1",
                  "parentUUID": "e64a9a4a-083f-4ad6-92d0-76cc4850b608",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e860df6d-4238-4cbe-b58c-42719f30c18e",
                "1dfb65d0-4fa1-4a87-a93d-8a9b346a97f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 190,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "9a7c1554-3b97-4f04-a309-7daa9ee85c2b",
              "title": "GET /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific program",
                  "fullTitle": "PROGRAMS GET /programs/:id should return a specific program",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 1\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "c8d3ca45-7706-4c88-b1fd-d022827e3363",
                  "parentUUID": "9a7c1554-3b97-4f04-a309-7daa9ee85c2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a program",
                  "fullTitle": "PROGRAMS GET /programs/:id should not return a program",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "ced4e6ed-5419-46d3-b36f-57d55657ec99",
                  "parentUUID": "9a7c1554-3b97-4f04-a309-7daa9ee85c2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c8d3ca45-7706-4c88-b1fd-d022827e3363",
                "ced4e6ed-5419-46d3-b36f-57d55657ec99"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 249,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "8d6c37d8-0dad-40f8-8014-5fe757723215",
              "title": "POST /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new program",
                  "fullTitle": "PROGRAMS POST /programs should create a new program",
                  "timedOut": false,
                  "duration": 185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newProgram.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "fe5c0f6c-0316-46d8-b50a-c12ab3162d49",
                  "parentUUID": "8d6c37d8-0dad-40f8-8014-5fe757723215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new program",
                  "fullTitle": "PROGRAMS POST /programs should not create a new program",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newProgram.name = \"\";\nrequest(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "14475da2-313f-4002-9e9c-f8340c62c588",
                  "parentUUID": "8d6c37d8-0dad-40f8-8014-5fe757723215",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe5c0f6c-0316-46d8-b50a-c12ab3162d49",
                "14475da2-313f-4002-9e9c-f8340c62c588"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 272,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d464d4dc-d827-4cd9-a872-fb4f0f20b691",
              "title": "PATCH /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should update a program",
                  "timedOut": false,
                  "duration": 182,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"Program 15\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 15\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "3b8bce45-9203-48d7-a2d1-51675c396a9d",
                  "parentUUID": "d464d4dc-d827-4cd9-a872-fb4f0f20b691",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should not update a program",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "aabe618f-c5b7-42cf-a0c1-d10d1fe5339b",
                  "parentUUID": "d464d4dc-d827-4cd9-a872-fb4f0f20b691",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b8bce45-9203-48d7-a2d1-51675c396a9d",
                "aabe618f-c5b7-42cf-a0c1-d10d1fe5339b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 269,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "ee2c30e3-7c4d-4c47-9fa1-cec329d26b36",
              "title": "DELETE /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should delete a program",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(programs[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "2e1a05e3-2469-4bb0-904f-8df0e6af66d9",
                  "parentUUID": "ee2c30e3-7c4d-4c47-9fa1-cec329d26b36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should not delete a program",
                  "timedOut": false,
                  "duration": 90,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "ac535065-7023-418f-a2cc-40d43b65a739",
                  "parentUUID": "ee2c30e3-7c4d-4c47-9fa1-cec329d26b36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e1a05e3-2469-4bb0-904f-8df0e6af66d9",
                "ac535065-7023-418f-a2cc-40d43b65a739"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 267,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "7a8a8864-1af1-4c1d-a5fa-ed7565ca22a0",
          "title": "USERS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
          "file": "\\tests\\users.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateUsers in \"USERS\"",
              "fullTitle": "USERS \"before each\" hook: populateUsers in \"USERS\"",
              "timedOut": false,
              "duration": 428,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "79474583-fe19-43b3-8267-af7cda064229",
              "parentUUID": "7a8a8864-1af1-4c1d-a5fa-ed7565ca22a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "035a43f5-b319-45ff-8a27-fc059f3da80e",
              "title": "GET /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of users",
                  "fullTitle": "USERS GET /users should return an array of users",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(users.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "8198890f-9551-41f8-b79a-e800bf8b1aef",
                  "parentUUID": "035a43f5-b319-45ff-8a27-fc059f3da80e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8198890f-9551-41f8-b79a-e800bf8b1aef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 166,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "0ed98efd-0312-414b-aef8-33ccf697a65c",
              "title": "POST /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new user",
                  "fullTitle": "USERS POST /users should create a new user",
                  "timedOut": false,
                  "duration": 393,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(newUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tnewUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tnewUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "8067b4f0-1c43-4b5d-a79c-cbf189c93d01",
                  "parentUUID": "0ed98efd-0312-414b-aef8-33ccf697a65c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new user with validation errors",
                  "fullTitle": "USERS POST /users should not create a new user with validation errors",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newUser.email = \"amessedupemail\";\nnewUser.first_name = \"l\";\nnewUser.last_name = \"l\";\nnewUser.username = \"l\";\nnewUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "7363e331-e678-4a0f-85b3-ca2b15774029",
                  "parentUUID": "0ed98efd-0312-414b-aef8-33ccf697a65c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8067b4f0-1c43-4b5d-a79c-cbf189c93d01",
                "7363e331-e678-4a0f-85b3-ca2b15774029"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 559,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7673ab83-81af-4a42-8d88-c87c7f54c565",
              "title": "GET /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a specific user with the provided ID",
                  "fullTitle": "USERS GET /users/:id should get a specific user with the provided ID",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "5c3f66b6-9ddf-431f-83fa-e49f78ecf421",
                  "parentUUID": "7673ab83-81af-4a42-8d88-c87c7f54c565",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a user with invalid ID",
                  "fullTitle": "USERS GET /users/:id should not return a user with invalid ID",
                  "timedOut": false,
                  "duration": 89,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "9ef3c978-5f32-45b2-822b-f19a0ca98cc1",
                  "parentUUID": "7673ab83-81af-4a42-8d88-c87c7f54c565",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c3f66b6-9ddf-431f-83fa-e49f78ecf421",
                "9ef3c978-5f32-45b2-822b-f19a0ca98cc1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 256,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "870052bb-7b4e-4d15-803d-3af1c94282da",
              "title": "PATCH /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update and return a single user",
                  "fullTitle": "USERS PATCH /users/:id should update and return a single user",
                  "timedOut": false,
                  "duration": 263,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "users[1].approved = true;\nrequest(app)\n\t.patch(`/api/users/${users[1]._id.toHexString()}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(users[1].username);\n\t\texpect(res.body.approved).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "0baadf9c-b18d-4353-972b-c0f5736e5330",
                  "parentUUID": "870052bb-7b4e-4d15-803d-3af1c94282da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with invalid ID",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 78,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.patch(`/api/users/${users[1]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Invalid ID\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "565f6f7e-28a8-425a-9e1b-10dd4b9d86c7",
                  "parentUUID": "870052bb-7b4e-4d15-803d-3af1c94282da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with validation errors",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with validation errors",
                  "timedOut": false,
                  "duration": 170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userData = {\n\tfirstName: \"\",\n\tlastName: \"Peter\",\n\tsuffix: \"Sr\",\n\tusername: \"blpsr\",\n\tpassword: \"thePassword\",\n\temail: \"gbr@test.com\",\n\ttype: \"Brian\",\n};\nrequest(app)\n\t.patch(`/api/users/${users[1]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(userData)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name is required\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\texpect(user.first_name).to.equal(\"Brian\");\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "823813ce-57aa-4d2f-868e-8a596e5a2dab",
                  "parentUUID": "870052bb-7b4e-4d15-803d-3af1c94282da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0baadf9c-b18d-4353-972b-c0f5736e5330",
                "565f6f7e-28a8-425a-9e1b-10dd4b9d86c7",
                "823813ce-57aa-4d2f-868e-8a596e5a2dab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 511,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "32991cd3-d795-444c-a620-4d52c6f951f0",
              "title": "DELETE /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete and return a single user",
                  "fullTitle": "USERS DELETE /users/:id should delete and return a single user",
                  "timedOut": false,
                  "duration": 254,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[0]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "9eb5c8f7-19d5-4f1e-890e-35b9aef7a796",
                  "parentUUID": "32991cd3-d795-444c-a620-4d52c6f951f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete and return a user with invalid ID",
                  "fullTitle": "USERS DELETE /users/:id should not delete and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[1]._id}sss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[1].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.username).to.equal(users[1].username);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "ebe3fb59-0019-4a7c-a04e-6fc822cde6fd",
                  "parentUUID": "32991cd3-d795-444c-a620-4d52c6f951f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9eb5c8f7-19d5-4f1e-890e-35b9aef7a796",
                "ebe3fb59-0019-4a7c-a04e-6fc822cde6fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 419,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3eb57a41-69cc-48bf-ac29-dbcdd5d6c144",
              "title": "POST /login",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should log the user into the website",
                  "fullTitle": "USERS POST /login should log the user into the website",
                  "timedOut": false,
                  "duration": 147,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.success).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "705d44b1-e90c-4a27-80a8-1fa9b6c3904a",
                  "parentUUID": "3eb57a41-69cc-48bf-ac29-dbcdd5d6c144",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in with an incorrect password",
                  "fullTitle": "USERS POST /login should not log the user in with an incorrect password",
                  "timedOut": false,
                  "duration": 143,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginWrongUser)\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Wrong username/password combination\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "bf1e1190-b712-4f8a-a3e8-22e6f3a62abc",
                  "parentUUID": "3eb57a41-69cc-48bf-ac29-dbcdd5d6c144",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in when not approved",
                  "fullTitle": "USERS POST /login should not log the user in when not approved",
                  "timedOut": false,
                  "duration": 146,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(users[3])\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Your account is not approved yet\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "f4b28c93-7c04-49e7-97a7-afaae0a8c006",
                  "parentUUID": "3eb57a41-69cc-48bf-ac29-dbcdd5d6c144",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "705d44b1-e90c-4a27-80a8-1fa9b6c3904a",
                "bf1e1190-b712-4f8a-a3e8-22e6f3a62abc",
                "f4b28c93-7c04-49e7-97a7-afaae0a8c006"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 436,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e8bbc538-a7b3-487b-b431-ad14a35547c2",
              "title": "POST /register",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register a new user",
                  "fullTitle": "USERS POST /register should register a new user",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/register\")\n\t.send(registerUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(registerUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: registerUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tregisterUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tregisterUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "290fbad3-3214-4532-a567-ed02cc3343c3",
                  "parentUUID": "e8bbc538-a7b3-487b-b431-ad14a35547c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register a new user with validation errors",
                  "fullTitle": "USERS POST /register should not register a new user with validation errors",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "registerUser.email = \"amessedupemail\";\nregisterUser.first_name = \"l\";\nregisterUser.last_name = \"l\";\nregisterUser.username = \"l\";\nregisterUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/register\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(registerUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "44206c01-0f44-4b3e-a2f6-237dc9a0f662",
                  "parentUUID": "e8bbc538-a7b3-487b-b431-ad14a35547c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "290fbad3-3214-4532-a567-ed02cc3343c3",
                "44206c01-0f44-4b3e-a2f6-237dc9a0f662"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 395,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "85af3bdb-e4e9-47c6-bbe1-9cd0ee698717",
          "title": "WAREHOUSES",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
          "file": "\\tests\\warehouses.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Warehouse.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar warehouseOne = new Warehouse(warehouses[0])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseTwo = new Warehouse(warehouses[1])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseThree = new Warehouse(warehouses[2])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\treturn Promise.all([warehouseOne, warehouseTwo, warehouseThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "d75ae2af-a1e3-4580-a35b-ac138df6a56f",
              "parentUUID": "85af3bdb-e4e9-47c6-bbe1-9cd0ee698717",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 420,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "4b8bac7d-e2b2-4a68-84ad-0f7fcc01cb14",
              "parentUUID": "85af3bdb-e4e9-47c6-bbe1-9cd0ee698717",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2513f0a0-136b-42e0-b65d-37028338054b",
              "title": "GET /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of warehouses",
                  "fullTitle": "WAREHOUSES GET /warehouses should return an array of warehouses",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(warehouses.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "b68794fb-d09e-4e3a-8760-14a177ce10b6",
                  "parentUUID": "2513f0a0-136b-42e0-b65d-37028338054b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of warehouses if not logged in",
                  "fullTitle": "WAREHOUSES GET /warehouses should not return an array of warehouses if not logged in",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "2be76088-7bee-4f41-999f-5a0aefef00e6",
                  "parentUUID": "2513f0a0-136b-42e0-b65d-37028338054b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b68794fb-d09e-4e3a-8760-14a177ce10b6",
                "2be76088-7bee-4f41-999f-5a0aefef00e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 167,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "46d3c6a0-e189-415f-bbf1-67836334390b",
              "title": "GET /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should return a specific warehouse",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 001\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "aa82819a-5f6f-4b69-b509-9feac7dd89c9",
                  "parentUUID": "46d3c6a0-e189-415f-bbf1-67836334390b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should not return a warehouse",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "24ac4bdb-d5e1-4598-a1f2-7a922e132738",
                  "parentUUID": "46d3c6a0-e189-415f-bbf1-67836334390b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa82819a-5f6f-4b69-b509-9feac7dd89c9",
                "24ac4bdb-d5e1-4598-a1f2-7a922e132738"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 248,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "98c08a2d-0517-424a-bbc0-aa6366d69220",
              "title": "POST /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should create a new warehouse",
                  "timedOut": false,
                  "duration": 169,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newWarehouse.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "7b38c685-6439-4475-81eb-199a399255b0",
                  "parentUUID": "98c08a2d-0517-424a-bbc0-aa6366d69220",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should not create a new warehouse",
                  "timedOut": false,
                  "duration": 86,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newWarehouse.name = \"\";\nrequest(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "ba0cafac-eb62-4290-b64a-c11f7a7b6005",
                  "parentUUID": "98c08a2d-0517-424a-bbc0-aa6366d69220",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b38c685-6439-4475-81eb-199a399255b0",
                "ba0cafac-eb62-4290-b64a-c11f7a7b6005"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 255,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "29ed8ab1-0fc2-4c86-b2a0-c17fa3cc31f5",
              "title": "PATCH /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should update a warehouse",
                  "timedOut": false,
                  "duration": 176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 010\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 010\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "7341cdea-d01c-4d19-a1f5-623ab939c849",
                  "parentUUID": "29ed8ab1-0fc2-4c86-b2a0-c17fa3cc31f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should not update a warehouse",
                  "timedOut": false,
                  "duration": 88,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e6aa1377-f8de-4ac8-a321-38ac0620bee1",
                  "parentUUID": "29ed8ab1-0fc2-4c86-b2a0-c17fa3cc31f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7341cdea-d01c-4d19-a1f5-623ab939c849",
                "e6aa1377-f8de-4ac8-a321-38ac0620bee1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 264,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e173d19d-c1fb-4905-ba93-53e746f4e64e",
              "title": "DELETE /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should delete a warehouse",
                  "timedOut": false,
                  "duration": 181,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(warehouses[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "5cecfa61-78b2-4a41-8790-6a688e07ee63",
                  "parentUUID": "e173d19d-c1fb-4905-ba93-53e746f4e64e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should not delete a warehouse",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "5c567d21-655d-4fe0-a5b1-57b91838d23c",
                  "parentUUID": "e173d19d-c1fb-4905-ba93-53e746f4e64e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5cecfa61-78b2-4a41-8790-6a688e07ee63",
                "5c567d21-655d-4fe0-a5b1-57b91838d23c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 263,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "alltests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "tests/reports",
        "reportFilename": "alltests"
      },
      "version": "6.2.0"
    }
  }
}