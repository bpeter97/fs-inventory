{
  "stats": {
    "suites": 20,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-06T02:53:35.282Z",
    "end": "2022-09-06T02:54:08.257Z",
    "duration": 32975,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cf86ecdd-5471-4382-9847-4ac0a9aa1606",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50cf5cd3-c42a-475a-9e1f-f4258ac22c95",
          "title": "PROGRAMS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
          "file": "\\tests\\programs.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Program.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar programOne = new Program(programs[0]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programTwo = new Program(programs[1]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programThree = new Program(programs[2]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\treturn Promise.all([programOne, programTwo, programThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "6db3bb0b-7322-4354-b710-6b75483217c5",
              "parentUUID": "50cf5cd3-c42a-475a-9e1f-f4258ac22c95",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populateUsers in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 626,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "a74363c6-6ce9-4be0-9eaf-befe6627ecfc",
              "parentUUID": "50cf5cd3-c42a-475a-9e1f-f4258ac22c95",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "93d6a12a-dcf1-499a-af7b-2608781733e8",
              "title": "GET /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of programs",
                  "fullTitle": "PROGRAMS GET /programs should return an array of programs",
                  "timedOut": false,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(programs.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "62a8f757-b568-455b-a205-7943bd3e97a1",
                  "parentUUID": "93d6a12a-dcf1-499a-af7b-2608781733e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of programs if not logged in",
                  "fullTitle": "PROGRAMS GET /programs should not return an array of programs if not logged in",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "b2c8b972-cead-41ff-8b40-61eee1155331",
                  "parentUUID": "93d6a12a-dcf1-499a-af7b-2608781733e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62a8f757-b568-455b-a205-7943bd3e97a1",
                "b2c8b972-cead-41ff-8b40-61eee1155331"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 190,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "388e53be-0570-4e07-9fd8-9fb690dc3131",
              "title": "GET /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific program",
                  "fullTitle": "PROGRAMS GET /programs/:id should return a specific program",
                  "timedOut": false,
                  "duration": 232,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 1\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "f8fd0c99-6f6d-47f3-b8d0-1b00cd437879",
                  "parentUUID": "388e53be-0570-4e07-9fd8-9fb690dc3131",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a program",
                  "fullTitle": "PROGRAMS GET /programs/:id should not return a program",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "a6a5772b-50e7-4e5c-a04a-7504b8488876",
                  "parentUUID": "388e53be-0570-4e07-9fd8-9fb690dc3131",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8fd0c99-6f6d-47f3-b8d0-1b00cd437879",
                "a6a5772b-50e7-4e5c-a04a-7504b8488876"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 392,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c96c4561-f159-4bea-8146-0fe4b05020ea",
              "title": "POST /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new program",
                  "fullTitle": "PROGRAMS POST /programs should create a new program",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newProgram.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "78ffee8e-0c55-4265-912f-b045697d38dd",
                  "parentUUID": "c96c4561-f159-4bea-8146-0fe4b05020ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new program",
                  "fullTitle": "PROGRAMS POST /programs should not create a new program",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newProgram.name = \"\";\nrequest(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "664a4088-6f68-4971-9d4a-2f9a8722fb27",
                  "parentUUID": "c96c4561-f159-4bea-8146-0fe4b05020ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78ffee8e-0c55-4265-912f-b045697d38dd",
                "664a4088-6f68-4971-9d4a-2f9a8722fb27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 462,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "6315b935-274f-4d44-9f82-36a67d6e904a",
              "title": "PATCH /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should update a program",
                  "timedOut": false,
                  "duration": 349,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"Program 15\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 15\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "cdb1d584-4caa-4da7-a4ed-299d59220ee2",
                  "parentUUID": "6315b935-274f-4d44-9f82-36a67d6e904a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should not update a program",
                  "timedOut": false,
                  "duration": 248,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "a26e4941-33b1-44bf-a302-dfcc4d7639d9",
                  "parentUUID": "6315b935-274f-4d44-9f82-36a67d6e904a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cdb1d584-4caa-4da7-a4ed-299d59220ee2",
                "a26e4941-33b1-44bf-a302-dfcc4d7639d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 597,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "649dd679-3248-439c-8725-f998d0721dfe",
              "title": "DELETE /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should delete a program",
                  "timedOut": false,
                  "duration": 432,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(programs[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "b2400c5d-4697-4fcf-9502-11f580a5c5bb",
                  "parentUUID": "649dd679-3248-439c-8725-f998d0721dfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should not delete a program",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "77e8246b-9b0e-4635-ba22-5f9220ef317e",
                  "parentUUID": "649dd679-3248-439c-8725-f998d0721dfe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2400c5d-4697-4fcf-9502-11f580a5c5bb",
                "77e8246b-9b0e-4635-ba22-5f9220ef317e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 636,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c5fbe8b4-f8b5-403e-9101-2861c0083bd0",
          "title": "USERS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
          "file": "\\tests\\users.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateUsers in \"USERS\"",
              "fullTitle": "USERS \"before each\" hook: populateUsers in \"USERS\"",
              "timedOut": false,
              "duration": 467,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "0b91192e-0fd3-4ae8-9388-abd9cba38806",
              "parentUUID": "c5fbe8b4-f8b5-403e-9101-2861c0083bd0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "744af0b4-141d-4612-af87-28e0e96b6b33",
              "title": "GET /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of users",
                  "fullTitle": "USERS GET /users should return an array of users",
                  "timedOut": false,
                  "duration": 214,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(users.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "59885210-ff9b-49fa-82cb-92760320b0b9",
                  "parentUUID": "744af0b4-141d-4612-af87-28e0e96b6b33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59885210-ff9b-49fa-82cb-92760320b0b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 214,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e8b9a75d-91b4-4262-b607-278288bf1ed9",
              "title": "POST /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new user",
                  "fullTitle": "USERS POST /users should create a new user",
                  "timedOut": false,
                  "duration": 643,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(newUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tnewUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tnewUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "33089086-8516-4342-9ecd-cd88ae548205",
                  "parentUUID": "e8b9a75d-91b4-4262-b607-278288bf1ed9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new user with validation errors",
                  "fullTitle": "USERS POST /users should not create a new user with validation errors",
                  "timedOut": false,
                  "duration": 246,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newUser.email = \"amessedupemail\";\nnewUser.first_name = \"l\";\nnewUser.last_name = \"l\";\nnewUser.username = \"l\";\nnewUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "228a553c-f9ac-435a-ad63-eb6e21c0898f",
                  "parentUUID": "e8b9a75d-91b4-4262-b607-278288bf1ed9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33089086-8516-4342-9ecd-cd88ae548205",
                "228a553c-f9ac-435a-ad63-eb6e21c0898f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 889,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c040f9a2-3718-473d-a87b-03389c0764b2",
              "title": "GET /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a specific user with the provided ID",
                  "fullTitle": "USERS GET /users/:id should get a specific user with the provided ID",
                  "timedOut": false,
                  "duration": 222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "b36e3f1b-bc2f-499a-948f-513884b603ed",
                  "parentUUID": "c040f9a2-3718-473d-a87b-03389c0764b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a user with invalid ID",
                  "fullTitle": "USERS GET /users/:id should not return a user with invalid ID",
                  "timedOut": false,
                  "duration": 123,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "cec0a702-38c2-4ed5-8d91-5e9d08b25841",
                  "parentUUID": "c040f9a2-3718-473d-a87b-03389c0764b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b36e3f1b-bc2f-499a-948f-513884b603ed",
                "cec0a702-38c2-4ed5-8d91-5e9d08b25841"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 345,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "b9b286e1-9a2c-4ee5-b913-e81643c4f11d",
              "title": "PATCH /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update and return a single user",
                  "fullTitle": "USERS PATCH /users/:id should update and return a single user",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "users[1].approved = true;\nrequest(app)\n\t.patch(`/api/users/${users[1]._id.toHexString()}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(users[1].username);\n\t\texpect(res.body.approved).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "003ed802-9619-4dce-9b5e-2101eaf2c758",
                  "parentUUID": "b9b286e1-9a2c-4ee5-b913-e81643c4f11d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with invalid ID",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 114,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.patch(`/api/users/${users[1]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Invalid ID\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "0b62d93d-0586-4bbc-ae07-c444ad6e1998",
                  "parentUUID": "b9b286e1-9a2c-4ee5-b913-e81643c4f11d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with validation errors",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with validation errors",
                  "timedOut": false,
                  "duration": 242,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userData = {\n\tfirstName: \"\",\n\tlastName: \"Peter\",\n\tsuffix: \"Sr\",\n\tusername: \"blpsr\",\n\tpassword: \"thePassword\",\n\temail: \"gbr@test.com\",\n\ttype: \"Brian\",\n};\nrequest(app)\n\t.patch(`/api/users/${users[1]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(userData)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name is required\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\texpect(user.first_name).to.equal(\"Brian\");\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "a947b69b-0a4c-45fb-a5ea-18a6cd7bbf0b",
                  "parentUUID": "b9b286e1-9a2c-4ee5-b913-e81643c4f11d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "003ed802-9619-4dce-9b5e-2101eaf2c758",
                "0b62d93d-0586-4bbc-ae07-c444ad6e1998",
                "a947b69b-0a4c-45fb-a5ea-18a6cd7bbf0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 661,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "f574c89d-efff-47ea-a28f-a04bea13b3bc",
              "title": "DELETE /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete and return a single user",
                  "fullTitle": "USERS DELETE /users/:id should delete and return a single user",
                  "timedOut": false,
                  "duration": 371,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[0]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "a8b070b4-a291-485a-bfad-0b73b2fafeca",
                  "parentUUID": "f574c89d-efff-47ea-a28f-a04bea13b3bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete and return a user with invalid ID",
                  "fullTitle": "USERS DELETE /users/:id should not delete and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 202,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[1]._id}sss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[1].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.username).to.equal(users[1].username);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "284ac849-a8b3-46e8-bae9-0fe27b457422",
                  "parentUUID": "f574c89d-efff-47ea-a28f-a04bea13b3bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8b070b4-a291-485a-bfad-0b73b2fafeca",
                "284ac849-a8b3-46e8-bae9-0fe27b457422"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 573,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7d83f929-3e23-479d-a407-95537bf132f8",
              "title": "POST /login",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should log the user into the website",
                  "fullTitle": "USERS POST /login should log the user into the website",
                  "timedOut": false,
                  "duration": 180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.success).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "fa3cb9d5-e9ed-4f44-bddc-f3d3d8e3bb04",
                  "parentUUID": "7d83f929-3e23-479d-a407-95537bf132f8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in with an incorrect password",
                  "fullTitle": "USERS POST /login should not log the user in with an incorrect password",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginWrongUser)\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Wrong username/password combination\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "18f84f9c-a909-4e5f-a901-fcea77b58c48",
                  "parentUUID": "7d83f929-3e23-479d-a407-95537bf132f8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in when not approved",
                  "fullTitle": "USERS POST /login should not log the user in when not approved",
                  "timedOut": false,
                  "duration": 178,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(users[3])\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Your account is not approved yet\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "0fba21d2-40fb-4b54-a69d-408d7eab59c7",
                  "parentUUID": "7d83f929-3e23-479d-a407-95537bf132f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa3cb9d5-e9ed-4f44-bddc-f3d3d8e3bb04",
                "18f84f9c-a909-4e5f-a901-fcea77b58c48",
                "0fba21d2-40fb-4b54-a69d-408d7eab59c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 508,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c4353752-4f81-4a97-9e5d-6fb26799b041",
              "title": "POST /register",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register a new user",
                  "fullTitle": "USERS POST /register should register a new user",
                  "timedOut": false,
                  "duration": 344,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/register\")\n\t.send(registerUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(registerUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: registerUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tregisterUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tregisterUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "ba986f7f-2d19-4255-ba46-62d74e4e68cd",
                  "parentUUID": "c4353752-4f81-4a97-9e5d-6fb26799b041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register a new user with validation errors",
                  "fullTitle": "USERS POST /register should not register a new user with validation errors",
                  "timedOut": false,
                  "duration": 96,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "registerUser.email = \"amessedupemail\";\nregisterUser.first_name = \"l\";\nregisterUser.last_name = \"l\";\nregisterUser.username = \"l\";\nregisterUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/register\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(registerUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "ee0eeed5-fc1e-4875-97d3-803dc506a0ba",
                  "parentUUID": "c4353752-4f81-4a97-9e5d-6fb26799b041",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba986f7f-2d19-4255-ba46-62d74e4e68cd",
                "ee0eeed5-fc1e-4875-97d3-803dc506a0ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 440,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "33897e3a-0de2-4747-8d6b-fdb2e664dd78",
          "title": "WAREHOUSES",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
          "file": "\\tests\\warehouses.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 190,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Warehouse.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar warehouseOne = new Warehouse(warehouses[0])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseTwo = new Warehouse(warehouses[1])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseThree = new Warehouse(warehouses[2])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\treturn Promise.all([warehouseOne, warehouseTwo, warehouseThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "75a796b1-1c97-4e46-acdb-72836d4057ba",
              "parentUUID": "33897e3a-0de2-4747-8d6b-fdb2e664dd78",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 426,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "f38c0109-1bf4-40e2-9b10-cccfca7157d1",
              "parentUUID": "33897e3a-0de2-4747-8d6b-fdb2e664dd78",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6a3f51e5-d17e-4326-a79f-d9ec2e50015a",
              "title": "GET /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of warehouses",
                  "fullTitle": "WAREHOUSES GET /warehouses should return an array of warehouses",
                  "timedOut": false,
                  "duration": 199,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(warehouses.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "2bd6271d-259d-4746-9710-bef03badfcc7",
                  "parentUUID": "6a3f51e5-d17e-4326-a79f-d9ec2e50015a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of warehouses if not logged in",
                  "fullTitle": "WAREHOUSES GET /warehouses should not return an array of warehouses if not logged in",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "20321fd1-2a00-456c-a5a6-1b9fc81b3bac",
                  "parentUUID": "6a3f51e5-d17e-4326-a79f-d9ec2e50015a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2bd6271d-259d-4746-9710-bef03badfcc7",
                "20321fd1-2a00-456c-a5a6-1b9fc81b3bac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 201,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c80f8b79-787b-4c35-80a2-2e1c3c90b1a8",
              "title": "GET /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should return a specific warehouse",
                  "timedOut": false,
                  "duration": 194,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 001\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "59296150-666a-46a9-9bec-376d4281b9c3",
                  "parentUUID": "c80f8b79-787b-4c35-80a2-2e1c3c90b1a8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should not return a warehouse",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "1e3c709f-29c8-475b-b4d9-b5d932b29dfa",
                  "parentUUID": "c80f8b79-787b-4c35-80a2-2e1c3c90b1a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59296150-666a-46a9-9bec-376d4281b9c3",
                "1e3c709f-29c8-475b-b4d9-b5d932b29dfa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 276,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "64c95aac-3919-40fe-849b-4a8331f40ecc",
              "title": "POST /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should create a new warehouse",
                  "timedOut": false,
                  "duration": 176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newWarehouse.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "9571dc4b-69e4-4520-84f7-83dd3cc8f9cb",
                  "parentUUID": "64c95aac-3919-40fe-849b-4a8331f40ecc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should not create a new warehouse",
                  "timedOut": false,
                  "duration": 128,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newWarehouse.name = \"\";\nrequest(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "f9d2bc8d-4235-466c-adc7-ce5479a49b4c",
                  "parentUUID": "64c95aac-3919-40fe-849b-4a8331f40ecc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9571dc4b-69e4-4520-84f7-83dd3cc8f9cb",
                "f9d2bc8d-4235-466c-adc7-ce5479a49b4c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 304,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "09c51f24-d5d1-428f-a5f3-5e7974e8b051",
              "title": "PATCH /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should update a warehouse",
                  "timedOut": false,
                  "duration": 229,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 010\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 010\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "d25cb96a-4c7b-4476-b4e2-a035110d3662",
                  "parentUUID": "09c51f24-d5d1-428f-a5f3-5e7974e8b051",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should not update a warehouse",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "4b7f5dcf-1e32-431d-a579-e2451a6e486b",
                  "parentUUID": "09c51f24-d5d1-428f-a5f3-5e7974e8b051",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d25cb96a-4c7b-4476-b4e2-a035110d3662",
                "4b7f5dcf-1e32-431d-a579-e2451a6e486b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "580e4f9a-edc6-4371-9277-d9b051507c2d",
              "title": "DELETE /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should delete a warehouse",
                  "timedOut": false,
                  "duration": 232,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(warehouses[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "baf3d004-0553-4147-9815-00f94da03244",
                  "parentUUID": "580e4f9a-edc6-4371-9277-d9b051507c2d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should not delete a warehouse",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "0fc56813-9800-47a5-8d11-04e32235580b",
                  "parentUUID": "580e4f9a-edc6-4371-9277-d9b051507c2d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "baf3d004-0553-4147-9815-00f94da03244",
                "0fc56813-9800-47a5-8d11-04e32235580b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "alltests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "tests/reports",
        "reportFilename": "alltests"
      },
      "version": "6.2.0"
    }
  }
}