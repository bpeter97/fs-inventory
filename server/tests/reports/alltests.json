{
  "stats": {
    "suites": 20,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-06T17:19:13.212Z",
    "end": "2022-09-06T17:19:38.698Z",
    "duration": 25486,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bc52dcb5-eb17-40d6-bfba-1d8df582b360",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bbbc2658-c354-465f-8778-0d5c14a4a39b",
          "title": "PROGRAMS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
          "file": "\\tests\\programs.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populatePrograms in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 172,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Program.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar programOne = new Program(programs[0]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programTwo = new Program(programs[1]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\tvar programThree = new Program(programs[2]).save().catch((e) => {\n\t\t\tconsole.log(e);\n\t\t});\n\t\treturn Promise.all([programOne, programTwo, programThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "7db570db-4488-4975-bd38-a4b932d055aa",
              "parentUUID": "bbbc2658-c354-465f-8778-0d5c14a4a39b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"PROGRAMS\"",
              "fullTitle": "PROGRAMS \"before each\" hook: populateUsers in \"PROGRAMS\"",
              "timedOut": false,
              "duration": 428,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "ccf0c215-1992-49b6-81b2-e99aab6590c3",
              "parentUUID": "bbbc2658-c354-465f-8778-0d5c14a4a39b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "95fb6879-c714-47a0-a9a1-9c52e1a46a49",
              "title": "GET /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of programs",
                  "fullTitle": "PROGRAMS GET /programs should return an array of programs",
                  "timedOut": false,
                  "duration": 185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(programs.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e1132ff0-164c-4d60-b83b-a7e1c12c3d49",
                  "parentUUID": "95fb6879-c714-47a0-a9a1-9c52e1a46a49",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of programs if not logged in",
                  "fullTitle": "PROGRAMS GET /programs should not return an array of programs if not logged in",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/programs\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "c93e4ad8-ade5-466c-ab44-d91ac127c5a9",
                  "parentUUID": "95fb6879-c714-47a0-a9a1-9c52e1a46a49",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1132ff0-164c-4d60-b83b-a7e1c12c3d49",
                "c93e4ad8-ade5-466c-ab44-d91ac127c5a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 188,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "9c5af40b-4b64-4ded-b237-3de816cc56cb",
              "title": "GET /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific program",
                  "fullTitle": "PROGRAMS GET /programs/:id should return a specific program",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 1\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "8ea9fde1-bbaf-485a-95b9-13d13e523852",
                  "parentUUID": "9c5af40b-4b64-4ded-b237-3de816cc56cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a program",
                  "fullTitle": "PROGRAMS GET /programs/:id should not return a program",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/programs/${programs[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e327fbe3-4f0c-424b-9ec6-0f8dfbaa1ee4",
                  "parentUUID": "9c5af40b-4b64-4ded-b237-3de816cc56cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ea9fde1-bbaf-485a-95b9-13d13e523852",
                "e327fbe3-4f0c-424b-9ec6-0f8dfbaa1ee4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 250,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e80d18aa-b72a-4987-92ca-e9043d685e68",
              "title": "POST /programs",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new program",
                  "fullTitle": "PROGRAMS POST /programs should create a new program",
                  "timedOut": false,
                  "duration": 183,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newProgram.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "d09e2bd1-a6fb-49b1-a7d6-4af35089b7e0",
                  "parentUUID": "e80d18aa-b72a-4987-92ca-e9043d685e68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new program",
                  "fullTitle": "PROGRAMS POST /programs should not create a new program",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newProgram.name = \"\";\nrequest(app)\n\t.post(\"/api/programs/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newProgram)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "9807f6f5-df48-4f7d-ac8e-e7064d31a152",
                  "parentUUID": "e80d18aa-b72a-4987-92ca-e9043d685e68",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d09e2bd1-a6fb-49b1-a7d6-4af35089b7e0",
                "9807f6f5-df48-4f7d-ac8e-e7064d31a152"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 267,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7250aad9-808d-4468-875b-d13d872414aa",
              "title": "PATCH /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should update a program",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"Program 15\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Program 15\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "728b4264-2a48-4e4e-a73b-cb6809207025",
                  "parentUUID": "7250aad9-808d-4468-875b-d13d872414aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a program",
                  "fullTitle": "PROGRAMS PATCH /programs/:id should not update a program",
                  "timedOut": false,
                  "duration": 86,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "programs[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(programs[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "e4904da2-da45-4987-9107-b19e68f1ee25",
                  "parentUUID": "7250aad9-808d-4468-875b-d13d872414aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "728b4264-2a48-4e4e-a73b-cb6809207025",
                "e4904da2-da45-4987-9107-b19e68f1ee25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 253,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "675f72ce-a38c-4c71-bd3b-b86bb53cb360",
              "title": "DELETE /programs/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\programs.test.js",
              "file": "\\tests\\programs.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should delete a program",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(programs[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "c128e7b2-f0a7-4f94-846d-8224f4c6330d",
                  "parentUUID": "675f72ce-a38c-4c71-bd3b-b86bb53cb360",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a program",
                  "fullTitle": "PROGRAMS DELETE /programs/:id should not delete a program",
                  "timedOut": false,
                  "duration": 90,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/programs/${programs[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.program).to.equal(\n\t\t\t\"There was no program found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "b182d958-fb50-4396-b2a1-75e2c0d4422d",
                  "parentUUID": "675f72ce-a38c-4c71-bd3b-b86bb53cb360",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c128e7b2-f0a7-4f94-846d-8224f4c6330d",
                "b182d958-fb50-4396-b2a1-75e2c0d4422d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 263,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "39cc29ff-f3b0-4eb2-9d5e-087cea056964",
          "title": "USERS",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
          "file": "\\tests\\users.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateUsers in \"USERS\"",
              "fullTitle": "USERS \"before each\" hook: populateUsers in \"USERS\"",
              "timedOut": false,
              "duration": 422,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "1dced2e3-8af1-48a1-9952-efd91064db33",
              "parentUUID": "39cc29ff-f3b0-4eb2-9d5e-087cea056964",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9c9a42bc-61aa-4986-81ed-e3a06b19c707",
              "title": "GET /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of users",
                  "fullTitle": "USERS GET /users should return an array of users",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(users.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "2ef01bcd-f9f7-43e5-9e3e-58083844cb44",
                  "parentUUID": "9c9a42bc-61aa-4986-81ed-e3a06b19c707",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ef01bcd-f9f7-43e5-9e3e-58083844cb44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 166,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d1bd6e7c-e954-46a0-81fa-e65b55808ed3",
              "title": "POST /users",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new user",
                  "fullTitle": "USERS POST /users should create a new user",
                  "timedOut": false,
                  "duration": 402,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(newUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tnewUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tnewUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "b507ebbc-aa07-400d-9a0f-5d5125e2fdd6",
                  "parentUUID": "d1bd6e7c-e954-46a0-81fa-e65b55808ed3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new user with validation errors",
                  "fullTitle": "USERS POST /users should not create a new user with validation errors",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newUser.email = \"amessedupemail\";\nnewUser.first_name = \"l\";\nnewUser.last_name = \"l\";\nnewUser.username = \"l\";\nnewUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/users\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "7fe63594-01a6-4b44-b031-0a688a44ed93",
                  "parentUUID": "d1bd6e7c-e954-46a0-81fa-e65b55808ed3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b507ebbc-aa07-400d-9a0f-5d5125e2fdd6",
                "7fe63594-01a6-4b44-b031-0a688a44ed93"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 568,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c76097fc-676e-4e71-a2fe-f5d37436e232",
              "title": "GET /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a specific user with the provided ID",
                  "fullTitle": "USERS GET /users/:id should get a specific user with the provided ID",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "f5ca48c0-b633-437e-abb9-0a19f4488e8c",
                  "parentUUID": "c76097fc-676e-4e71-a2fe-f5d37436e232",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a user with invalid ID",
                  "fullTitle": "USERS GET /users/:id should not return a user with invalid ID",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/users/${users[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[0].username);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "28bf996d-7592-41fa-a3ba-7618ee5d4f5c",
                  "parentUUID": "c76097fc-676e-4e71-a2fe-f5d37436e232",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5ca48c0-b633-437e-abb9-0a19f4488e8c",
                "28bf996d-7592-41fa-a3ba-7618ee5d4f5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 249,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e6627cc7-455e-4579-b826-a027ab16a1ec",
              "title": "PATCH /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update and return a single user",
                  "fullTitle": "USERS PATCH /users/:id should update and return a single user",
                  "timedOut": false,
                  "duration": 262,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "users[1].approved = true;\nrequest(app)\n\t.patch(`/api/users/${users[1]._id.toHexString()}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(users[1].username);\n\t\texpect(res.body.approved).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "865c3142-fa70-4d69-829d-b66798c838a6",
                  "parentUUID": "e6627cc7-455e-4579-b826-a027ab16a1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with invalid ID",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 82,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.patch(`/api/users/${users[1]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(users[1])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Invalid ID\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "5f557c78-2569-4b6d-af5c-7bca4e09bd95",
                  "parentUUID": "e6627cc7-455e-4579-b826-a027ab16a1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update and return a user with validation errors",
                  "fullTitle": "USERS PATCH /users/:id should not update and return a user with validation errors",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userData = {\n\tfirstName: \"\",\n\tlastName: \"Peter\",\n\tsuffix: \"Sr\",\n\tusername: \"blpsr\",\n\tpassword: \"thePassword\",\n\temail: \"gbr@test.com\",\n\ttype: \"Brian\",\n};\nrequest(app)\n\t.patch(`/api/users/${users[1]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(userData)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name is required\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user.approved).to.equal(true);\n\t\t\t\texpect(user.first_name).to.equal(\"Brian\");\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "0dbb1544-f968-4640-83bb-513bdd292f9b",
                  "parentUUID": "e6627cc7-455e-4579-b826-a027ab16a1ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "865c3142-fa70-4d69-829d-b66798c838a6",
                "5f557c78-2569-4b6d-af5c-7bca4e09bd95",
                "0dbb1544-f968-4640-83bb-513bdd292f9b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 507,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7c157926-ba05-418c-a3ac-a1b144c17e0d",
              "title": "DELETE /users/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete and return a single user",
                  "fullTitle": "USERS DELETE /users/:id should delete and return a single user",
                  "timedOut": false,
                  "duration": 257,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body._id).to.equal(users[0]._id.toHexString());\n\t\texpect(res.body.username).to.equal(users[0].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[0]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "a5128632-c9b1-4968-bd11-a3b66f2d08ac",
                  "parentUUID": "7c157926-ba05-418c-a3ac-a1b144c17e0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete and return a user with invalid ID",
                  "fullTitle": "USERS DELETE /users/:id should not delete and return a user with invalid ID",
                  "timedOut": false,
                  "duration": 170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/users/${users[1]._id}sss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.user).to.equal(\"There was no user found\");\n\t\texpect(res.body.username).to.not.equal(users[1].username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findById(users[1]._id.toHexString())\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.username).to.equal(users[1].username);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "54c05736-004c-47a2-8013-308f40ca0eb3",
                  "parentUUID": "7c157926-ba05-418c-a3ac-a1b144c17e0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5128632-c9b1-4968-bd11-a3b66f2d08ac",
                "54c05736-004c-47a2-8013-308f40ca0eb3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 427,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3fe8b652-86b4-4d59-948f-cdc04f2576f5",
              "title": "POST /login",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should log the user into the website",
                  "fullTitle": "USERS POST /login should log the user into the website",
                  "timedOut": false,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.success).to.equal(true);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "b4d7c169-3f40-4e4f-9ee3-d80beb73fa10",
                  "parentUUID": "3fe8b652-86b4-4d59-948f-cdc04f2576f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in with an incorrect password",
                  "fullTitle": "USERS POST /login should not log the user in with an incorrect password",
                  "timedOut": false,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(loginWrongUser)\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Wrong username/password combination\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "85f90e19-83fb-445a-8ad9-70ccbd48a716",
                  "parentUUID": "3fe8b652-86b4-4d59-948f-cdc04f2576f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not log the user in when not approved",
                  "fullTitle": "USERS POST /login should not log the user in when not approved",
                  "timedOut": false,
                  "duration": 138,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/login\")\n\t.send(users[3])\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.login).to.equal(\n\t\t\t\"Your account is not approved yet\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "97884089-f9cb-455c-9073-e52dadb53079",
                  "parentUUID": "3fe8b652-86b4-4d59-948f-cdc04f2576f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4d7c169-3f40-4e4f-9ee3-d80beb73fa10",
                "85f90e19-83fb-445a-8ad9-70ccbd48a716",
                "97884089-f9cb-455c-9073-e52dadb53079"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 428,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "33ec17c7-ab75-4452-9d13-b916964ddf51",
              "title": "POST /register",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\users.test.js",
              "file": "\\tests\\users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register a new user",
                  "fullTitle": "USERS POST /register should register a new user",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/register\")\n\t.send(registerUser)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.username).to.equal(registerUser.username);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: registerUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.be.ok;\n\t\t\t\texpect(user.first_name).to.equal(\n\t\t\t\t\tregisterUser.first_name\n\t\t\t\t);\n\t\t\t\texpect(user.password).not.to.equal(\n\t\t\t\t\tregisterUser.password\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "1a6539f9-e511-40b8-bfd2-e37560b84ffe",
                  "parentUUID": "33ec17c7-ab75-4452-9d13-b916964ddf51",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register a new user with validation errors",
                  "fullTitle": "USERS POST /register should not register a new user with validation errors",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "registerUser.email = \"amessedupemail\";\nregisterUser.first_name = \"l\";\nregisterUser.last_name = \"l\";\nregisterUser.username = \"l\";\nregisterUser.password = \"l\";\nrequest(app)\n\t.post(\"/api/register\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(registerUser)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.email).to.equal(\"Must enter a valid email\");\n\t\texpect(res.body.first_name).to.equal(\n\t\t\t\"First name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.last_name).to.equal(\n\t\t\t\"Last name must be between 2 and 20 characters\"\n\t\t);\n\t\texpect(res.body.username).to.equal(\n\t\t\t\"Username must be between 4 and 20 characters\"\n\t\t);\n\t\texpect(res.body.password).to.equal(\n\t\t\t\"Password must be more than 3 characters\"\n\t\t);\n\t})\n\t.end((err) => {\n\t\tif (err) {\n\t\t\treturn done(err);\n\t\t}\n\t\tUser.findOne({ username: newUser.username })\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.not.be.ok;\n\t\t\t\tdone();\n\t\t\t})\n\t\t\t.catch((e) => done(e));\n\t});",
                  "err": {},
                  "uuid": "0f85be91-3c35-43e4-a4c8-915590e5644c",
                  "parentUUID": "33ec17c7-ab75-4452-9d13-b916964ddf51",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a6539f9-e511-40b8-bfd2-e37560b84ffe",
                "0f85be91-3c35-43e4-a4c8-915590e5644c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 396,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0f39715e-458b-4a6d-88cd-7be69e6694da",
          "title": "WAREHOUSES",
          "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
          "file": "\\tests\\warehouses.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateWarehouses in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 170,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Warehouse.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar warehouseOne = new Warehouse(warehouses[0])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseTwo = new Warehouse(warehouses[1])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\tvar warehouseThree = new Warehouse(warehouses[2])\n\t\t\t.save()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\treturn Promise.all([warehouseOne, warehouseTwo, warehouseThree]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "bd805221-eed6-4894-a930-e02eec8ce5c5",
              "parentUUID": "0f39715e-458b-4a6d-88cd-7be69e6694da",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "fullTitle": "WAREHOUSES \"before each\" hook: populateUsers in \"WAREHOUSES\"",
              "timedOut": false,
              "duration": 433,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.deleteMany({})\n\t.then(() => {\n\t\t// generate the hash/salted password for the users.\n\t\tvar userOne = new User(users[0]).save().then((user) => {\n\t\t\tusers[0].token = user.generateAuthToken();\n\t\t});\n\t\tvar userTwo = new User(users[1]).save().then((user) => {\n\t\t\tusers[1].token = user.generateAuthToken();\n\t\t});\n\t\tvar userThree = new User(users[2]).save();\n\t\tvar userFour = new User(users[3]).save();\n\t\treturn Promise.all([userOne, userTwo, userThree, userFour]);\n\t})\n\t.then(() => done())\n\t.catch((e) => console.log(e));",
              "err": {},
              "uuid": "d2af068d-a570-4d9d-958f-64896828cdbc",
              "parentUUID": "0f39715e-458b-4a6d-88cd-7be69e6694da",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ac2aaa31-11a7-4fd3-9557-78f6862c2658",
              "title": "GET /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an array of warehouses",
                  "fullTitle": "WAREHOUSES GET /warehouses should return an array of warehouses",
                  "timedOut": false,
                  "duration": 169,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.length).to.equal(warehouses.length);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "d3a4cf4f-73a8-4a51-8409-57714687ea9d",
                  "parentUUID": "ac2aaa31-11a7-4fd3-9557-78f6862c2658",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return an array of warehouses if not logged in",
                  "fullTitle": "WAREHOUSES GET /warehouses should not return an array of warehouses if not logged in",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(\"/api/warehouses\")\n\t.expect(401)\n\t.expect((res) => {\n\t\texpect(res.body.auth).to.equal(\"Authorization failed\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "8151be24-e7de-4044-92f6-95a35fe16b29",
                  "parentUUID": "ac2aaa31-11a7-4fd3-9557-78f6862c2658",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3a4cf4f-73a8-4a51-8409-57714687ea9d",
                "8151be24-e7de-4044-92f6-95a35fe16b29"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 172,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e257c490-6028-4091-abb7-2045dbd99729",
              "title": "GET /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a specific warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should return a specific warehouse",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 001\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "0a9ec3c5-6be4-4a97-bd1f-9c200d012d35",
                  "parentUUID": "e257c490-6028-4091-abb7-2045dbd99729",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return a warehouse",
                  "fullTitle": "WAREHOUSES GET /warehouses/:id should not return a warehouse",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.get(`/api/warehouses/${warehouses[0]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "13385f4b-1268-4200-9af0-696fe63b5414",
                  "parentUUID": "e257c490-6028-4091-abb7-2045dbd99729",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a9ec3c5-6be4-4a97-bd1f-9c200d012d35",
                "13385f4b-1268-4200-9af0-696fe63b5414"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 243,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e416de62-b0ec-4438-b27d-e49cbafee04f",
              "title": "POST /warehouses",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should create a new warehouse",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(newWarehouse.name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "7aa2c5e1-a158-465b-ba6c-700af0bbc965",
                  "parentUUID": "e416de62-b0ec-4438-b27d-e49cbafee04f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not create a new warehouse",
                  "fullTitle": "WAREHOUSES POST /warehouses should not create a new warehouse",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "newWarehouse.name = \"\";\nrequest(app)\n\t.post(\"/api/warehouses/\")\n\t.set(\"Authorization\", users[0].token)\n\t.send(newWarehouse)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"Name is required\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "c3410932-e0d8-48c5-a49b-9b9e92f5f9ff",
                  "parentUUID": "e416de62-b0ec-4438-b27d-e49cbafee04f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7aa2c5e1-a158-465b-ba6c-700af0bbc965",
                "c3410932-e0d8-48c5-a49b-9b9e92f5f9ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 247,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "f500d622-bf75-46af-8917-f8483c2c2f30",
              "title": "PATCH /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should update a warehouse",
                  "timedOut": false,
                  "duration": 172,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 010\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(\"WH 010\");\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "172acf91-db3b-4288-8064-4e5ca986a6df",
                  "parentUUID": "f500d622-bf75-46af-8917-f8483c2c2f30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not update a warehouse",
                  "fullTitle": "WAREHOUSES PATCH /warehouses/:id should not update a warehouse",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "warehouses[2].name = \"WH 020\";\nrequest(app)\n\t.patch(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.send(warehouses[2])\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "ca254acf-7631-42e7-b763-164dec859714",
                  "parentUUID": "f500d622-bf75-46af-8917-f8483c2c2f30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "172acf91-db3b-4288-8064-4e5ca986a6df",
                "ca254acf-7631-42e7-b763-164dec859714"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 257,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "ddbb3864-2878-4fb9-9bb4-c99d177f0ab9",
              "title": "DELETE /warehouses/:id",
              "fullFile": "C:\\Coding\\family-services-warehouse\\server\\tests\\warehouses.test.js",
              "file": "\\tests\\warehouses.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should delete a warehouse",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(200)\n\t.expect((res) => {\n\t\texpect(res.body.name).to.equal(warehouses[2].name);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "5a9bb25c-419d-49d7-9768-1026008c0204",
                  "parentUUID": "ddbb3864-2878-4fb9-9bb4-c99d177f0ab9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not delete a warehouse",
                  "fullTitle": "WAREHOUSES DELETE /warehouses/:id should not delete a warehouse",
                  "timedOut": false,
                  "duration": 86,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request(app)\n\t.delete(`/api/warehouses/${warehouses[2]._id}ssss`)\n\t.set(\"Authorization\", users[0].token)\n\t.expect(400)\n\t.expect((res) => {\n\t\texpect(res.body.warehouse).to.equal(\n\t\t\t\"There was no warehouse found\"\n\t\t);\n\t})\n\t.end(done);",
                  "err": {},
                  "uuid": "27075ca0-0be9-4329-9b57-f50e8faa84f8",
                  "parentUUID": "ddbb3864-2878-4fb9-9bb4-c99d177f0ab9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a9bb25c-419d-49d7-9768-1026008c0204",
                "27075ca0-0be9-4329-9b57-f50e8faa84f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 263,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "alltests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "tests/reports",
        "reportFilename": "alltests"
      },
      "version": "6.2.0"
    }
  }
}